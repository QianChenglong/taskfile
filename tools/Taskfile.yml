version: 3

tasks:
  install:
    desc: "安装对应工具"
    vars:
      NAME: "{{.NAME}}"
      CMD: >-
        {{if .CMD}}{{.CMD}}
        {{else}}brew install {{.NAME}}
        {{end}}
    cmds:
      - which {{.NAME}} || {{.CMD}}

  init:
    desc: "初始化项目工具"
    silent: true
    deps: [git, husky, golangci-lint, commitlint, conventional-changelog]

  git:
    desc: "配置git"
    internal: true
    cmds:
      - git config remote.origin.tagopt --tags

  husky:
    desc: "安装husky（git hooks管理工具）"
    internal: true
    cmds:
      - npm install -g husky > /dev/null 2>&1
      - husky install > /dev/null 2>&1
      - echo "npx --no -- commitlint --edit \$1" > .husky/commit-msg
      - echo "task --yes --silent init >/dev/null &" > .husky/post-merge

  golangci-lint:
    desc: "安装golangci-lint"
    internal: true
    vars:
      VERSION: 1.58.0
    cmds:
      - >
        [ "$(golangci-lint version 2>/dev/null | awk '{print $4}')" == "{{.VERSION}}" ] || curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v{{.VERSION}}

  commitlint:
    desc: "安装commitlint工具"
    internal: true
    cmds:
      - npm install -g @commitlint/cli @commitlint/config-conventional > /dev/null 2>&1
      - >-
        echo 'extends: ["@commitlint/config-conventional"]' >.commitlintrc.yml

  conventional-changelog:
    desc: "安装conventional-changelog（changelog生成工具）"
    internal: true
    cmds:
      - npm install -g conventional-changelog-cli > /dev/null 2>&1

  changelog:
    desc: "自动生成changelog"
    vars:
      FILE: '{{default "CHANGELOG.md" .FILE}}'
    cmds:
      - conventional-changelog -p angular -i {{.FILE}} -s
